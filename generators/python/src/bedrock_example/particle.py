# AUTOGENERATED! DON'T EDIT!
from .jpath import *


def files(*resource_pack_paths: Path) -> Iterator[Path]:
    for pack_path in resource_pack_paths:
        for file in pack_path.glob("particles/**/*.json"):
            yield file


def objects(*paths: Path) -> Iterator[Optional[Json]]:
    for item_path in paths:
        try:
            with item_path.open('r') as f:
                yield get_jpath_single(Json(None, json.load(f)), [])
        except:
            yield None


def identifiers(*objects: Json) -> Iterator[str]:
    for obj in objects:
        identifier = get_jpath_single(obj, ["particle_effect", "description", "identifier"])
        if identifier is not None and isinstance(identifier.value, str):
            result = identifier.value

            yield result
